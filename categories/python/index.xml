<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 村边的池塘</title>
    <link>https://jerrywang1981.github.io/categories/python/</link>
    <description>Recent content in python on 村边的池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 23 Apr 2020 14:23:52 +0800</lastBuildDate>
    
	<atom:link href="https://jerrywang1981.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>02 Python Variable</title>
      <link>https://jerrywang1981.github.io/post/python/02-python-variable/</link>
      <pubDate>Thu, 23 Apr 2020 14:23:52 +0800</pubDate>
      
      <guid>https://jerrywang1981.github.io/post/python/02-python-variable/</guid>
      <description>变量 命名 变量名必须是大小写英文、数字和_的组合，且不能用数字开头 允许的变量名：a, a1, B_5, ____5, _C 静态语言，动态语言 大小写敏感 Dunder 规范 snake_case e.g. a_b, total_count 变量 函数名 模块 包 CamelCase e.g. Person, TeamMember 类名 常量 一般用大写, PI=3.14</description>
    </item>
    
    <item>
      <title>01 Python Data Type</title>
      <link>https://jerrywang1981.github.io/post/python/01-python-data-type/</link>
      <pubDate>Thu, 23 Apr 2020 13:51:39 +0800</pubDate>
      
      <guid>https://jerrywang1981.github.io/post/python/01-python-data-type/</guid>
      <description>基本数据类型 整数 int 十进制： -1, 0, 1000, -8000, 88 八进制：0o10, 0o27 十六进制：0x10, 0xff 数学运算 + - * / // % 浮点数 float 比如：1.23, 2.6e3 字符串 str 字符串是以单引号&#39;或双引号&amp;quot;括起来的任意文本 如果字符串内部包含&amp;rsquo;,&amp;quot;, 可以用转义字符\来标识 转义 \ 不转义 &amp;lsquo;&amp;lsquo;&amp;lsquo;text&amp;rsquo;&#39;&#39;, &amp;ldquo;&amp;ldquo;&amp;ldquo;text&amp;rdquo;&amp;quot;&amp;quot;, r&#39;text\n&amp;rsquo; 布尔值</description>
    </item>
    
    <item>
      <title>Phone Nest</title>
      <link>https://jerrywang1981.github.io/post/phone-nest/</link>
      <pubDate>Sat, 11 Apr 2020 21:15:14 +0800</pubDate>
      
      <guid>https://jerrywang1981.github.io/post/phone-nest/</guid>
      <description>背景 最近有做一个nestjs的项目，用的nestjs实现的微服务，如果所有的功能都用node/nestjs写，那倒也没有什么问题了。可是有一个功能是需要用到机器学习，代码是用python写的，需要用python实现一个微服务，供nest app来调用，同时，python代码也需要调</description>
    </item>
    
  </channel>
</rss>